- content_for :header do
  %h1 View Challenge
.box
  %h2 View Game!
  .board{:style => "width: 365px; margin: auto"}
    - 7.times do |x|
      .space{:class => "position#{x}", :style => "border: 1px solid black; width: 50px; height: 50px; float: left;"}
  %div{:style => "clear: both;"}
  .choices{:style => "width: 50%;"}
.column
  .box.p1.character
.column
  .box.p2.character
.box.log{:style => "clear: both;"}

  

:javascript
  var interval;
  var statements = 0;
  
  function setLog(log) {
    $log = $('.log')
    for (var i = 0; i < log.length; i +=1 ) {
      $log.prepend("<p>" + log[i] + "</p>");
      statements += 1;
    }
  }
  
  function setPlayer(name,location,data) {
    var val = ""
    val = val + "<p>Name: " + name + "</p>"
    val = val + "<p>Life: " + data.life + "</p>"
    val = val + "<p>Forms: " + data.forms.join(', ') + "</p>"
    val = val + "<p>Bases: " + data.bases.join(', ') + "</p>"
    val = val + "<p>Current Power: " + data.power + "</p>"
    val = val + "<p>Current Range: " + data.range + "</p>"
    val = val + "<p>Current Priority: " + data.priority + "</p>"
    val = val + "<p>Stun Guard: " + data.stun_guard + "</p>"
    val = val + "<p>Soak: " + data.soak + "</p>"
    val = val + "<p>Stun immunity: " + data.stun_immunity + "</p>"
    location.html(val)
    $('.board .position' + data.position).text(name)
  }
  function clearChoices() {
    $('.choices').html('');
  }
    
  function setChoices(choices) {
    var val = ''
    for(var i = 0; i < choices.length; i++) {
      val += "<a href='#'>" + choices[i] + "</a> " 
    }
    $('.choices').html(val);
    $('.choices a').click(function(){
      inp($(this).text());
    })
  }
  function loadData(data) {
    $('.board .space').text('')
    if (data.p1) {
      setPlayer('p1',$('.p1'),data.p1)
      setPlayer('p2',$('.p2'),data.p2)
    }
    //console.log(data);
    setLog(data.log);
    if (data.pending_input) {
      setChoices(data.pending_input);
    } else {
      clearChoices();
    }
    if (data.winner) {
      console.log("Finished game.")
      $('.' + data.winner).addClass('winner').prepend("<h2>Winner!<h2>")
      $('.character:not(.winner)').prepend("<h2>Loser!<h2>")
      clearInterval(interval);
    } 
  }
  function refreshStatus() {
    $.get('#{@challenge.id}.json', {log: statements}, loadData)
  }
  function inp(x) {
    console.log("POSTING...");
    $.post(''
    , {input: x}
    , function(data){ 
      if (data.success) {
        loadData(data.game);
      }
    })
  }
  $(function(){
    interval = setInterval('refreshStatus();', 1000);
    refreshStatus();
  })